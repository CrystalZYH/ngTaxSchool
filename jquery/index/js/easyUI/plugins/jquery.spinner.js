(function(E){function A(F){var G=E('<span class="spinner"><span class="spinner-arrow"><span class="spinner-arrow-up"></span><span class="spinner-arrow-down"></span></span></span>').insertAfter(F);E(F).addClass("spinner-text spinner-f").prependTo(G);return G}function D(F,G){var I=E.data(F,"spinner").options;var K=E.data(F,"spinner").spinner;if(G){I.width=G}var J=E('<div style="display:none"></div>').insertBefore(K);K.appendTo("body");if(isNaN(I.width)){I.width=E(F).outerWidth()}var H=K.find(".spinner-arrow");K._outerWidth(I.width)._outerHeight(I.height);E(F)._outerWidth(K.width()-H.outerWidth());E(F).css({height:K.height()+"px",lineHeight:K.height()+"px"});H._outerHeight(K.height());H.find("span")._outerHeight(H.height()/2);K.insertAfter(J);J.remove()}function C(F){var G=E.data(F,"spinner").options;var H=E.data(F,"spinner").spinner;H.find(".spinner-arrow-up,.spinner-arrow-down").unbind(".spinner");if(!G.disabled){H.find(".spinner-arrow-up").bind("mouseenter.spinner",function(){E(this).addClass("spinner-arrow-hover")}).bind("mouseleave.spinner",function(){E(this).removeClass("spinner-arrow-hover")}).bind("click.spinner",function(){G.spin.call(F,false);G.onSpinUp.call(F);E(F).validatebox("validate")});H.find(".spinner-arrow-down").bind("mouseenter.spinner",function(){E(this).addClass("spinner-arrow-hover")}).bind("mouseleave.spinner",function(){E(this).removeClass("spinner-arrow-hover")}).bind("click.spinner",function(){G.spin.call(F,true);G.onSpinDown.call(F);E(F).validatebox("validate")})}}function B(G,F){var H=E.data(G,"spinner").options;if(F){H.disabled=true;E(G).attr("disabled",true)}else{H.disabled=false;E(G).removeAttr("disabled")}}E.fn.spinner=function(F,H){if(typeof F=="string"){var G=E.fn.spinner.methods[F];if(G){return G(this,H)}else{return this.validatebox(F,H)}}F=F||{};return this.each(function(){var I=E.data(this,"spinner");if(I){E.extend(I.options,F)}else{I=E.data(this,"spinner",{options:E.extend({},E.fn.spinner.defaults,E.fn.spinner.parseOptions(this),F),spinner:A(this)});E(this).removeAttr("disabled")}I.options.originalValue=I.options.value;E(this).val(I.options.value);E(this).attr("readonly",!I.options.editable);B(this,I.options.disabled);D(this);E(this).validatebox(I.options);C(this)})};E.fn.spinner.methods={options:function(F){var G=E.data(F[0],"spinner").options;return E.extend(G,{value:F.val()})},destroy:function(F){return F.each(function(){var G=E.data(this,"spinner").spinner;E(this).validatebox("destroy");G.remove()})},resize:function(F,G){return F.each(function(){D(this,G)})},enable:function(F){return F.each(function(){B(this,false);C(this)})},disable:function(F){return F.each(function(){B(this,true);C(this)})},getValue:function(F){return F.val()},setValue:function(F,G){return F.each(function(){var H=E.data(this,"spinner").options;H.value=G;E(this).val(G)})},clear:function(F){return F.each(function(){var G=E.data(this,"spinner").options;G.value="";E(this).val("")})},reset:function(F){return F.each(function(){var G=E(this).spinner("options");E(this).spinner("setValue",G.originalValue)})}};E.fn.spinner.parseOptions=function(F){var G=E(F);return E.extend({},E.fn.validatebox.parseOptions(F),E.parser.parseOptions(F,["width","height","min","max",{increment:"number",editable:"boolean"}]),{value:(G.val()||undefined),disabled:(G.attr("disabled")?true:undefined)})};E.fn.spinner.defaults=E.extend({},E.fn.validatebox.defaults,{width:"auto",height:22,deltaX:19,value:"",min:null,max:null,increment:1,editable:true,disabled:false,spin:function(F){},onSpinUp:function(){},onSpinDown:function(){}})})(jQuery);